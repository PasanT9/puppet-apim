[server]
hostname = "<%= @hostname %>"	
server_role = "gateway-worker"	
offset = "<%= @ports_offset %>"

[user_store]
type = "database_unique_id"

[super_admin]	
username = "<%= @admin_username %>"	
password = "<%= @admin_password %>"	
create_admin_account = true

[database.shared_db]
type = "<%= @wso2shared_db_type %>"	
url = "<%= @wso2shared_db_url %>"	
username = "<%= @wso2shared_db_username %>"	
password = "<%= @wso2shared_db_password %>"	

[database.shared_db.pool_options]	
validationQuery = "<%= @wso2shared_db_validation_query %>"

[keystore.tls]	
file_name =  "<%= @key_store_location %>"	
type =  "JKS"	
password =  "<%= @key_store_password %>"	
alias =  "<%= @key_store_key_alias %>"	
key_password =  "<%= @key_store_key_password %>"

[truststore]	
file_name = "<%= @trust_store_location %>"	
type = "JKS"	
password = "<%= @trust_store_password %>"	

[apim.sync_runtime_artifacts.gateway]	
gateway_labels = <%= @gateway_labels %>

# key manager implementation
[apim.key_manager]
service_url = "<%= @key_manager_server_url %>"
username= "$ref{super_admin.username}"
password= "$ref{super_admin.password}"

# JWT Generation
[apim.jwt]
enable = true
encoding = "base64" # base64,base64url
#generator_impl = "org.wso2.carbon.apimgt.keymgt.token.JWTGenerator"
claim_dialect = "http://wso2.org/claims"
header = "X-JWT-Assertion"
signing_algorithm = "SHA256withRSA"
#enable_user_claims = true
#claims_extractor_impl = "org.wso2.carbon.apimgt.impl.token.DefaultClaimsRetriever"

[apim.sync_runtime_artifacts.gateway]
gateway_labels =["Default"]

# Traffic Manager configurations
[apim.throttling]
username= "$ref{super_admin.username}"
password= "$ref{super_admin.password}"
service_url = "<%= @throttle_service_url %>"	
throttle_decision_endpoints = [<%= @throttle_decision_endpoints %>]
#enable_unlimited_tier = true
#enable_header_based_throttling = false
#enable_jwt_claim_based_throttling = false
#enable_query_param_based_throttling = false

<% @throttling_url_group.each do |url_group| %>
[[apim.throttling.url_group]]	
traffic_manager_urls=[<%= url_group['traffic_manager_urls'] %>]	
traffic_manager_auth_urls=[<%= url_group['traffic_manager_auth_urls'] %>]	
<% end %>

[apim.analytics]	
enable = <%= @analytics_enabled %>	
config_endpoint = "<%= @analytics_config_endpoint %>"	
auth_token = "<%= @analytics_auth_token %>"

# Caches
[apim.cache.gateway_token]
enable = true
expiry_time = 15

[apim.cache.resource]
enable = true

[apim.cache.jwt_claim]
enable = true
expiry_time = 900

[apim.oauth_config]
remove_outbound_auth_header = true
auth_header = "Authorization"

[apim.cors]
allow_origins = "*"
allow_methods = ["GET","PUT","POST","DELETE","PATCH","OPTIONS"]
allow_headers = ["authorization","Access-Control-Allow-Origin","Content-Type","SOAPAction","apikey","Internal-Key"]
allow_credentials = false
[root@instance-1 production]# cat /etc/puppetlabs/code/environments/production/modules/apim_tm/templates/carbon-home/repository/conf/deployment.toml.erb
[server]	
hostname = "<%= @hostname %>"	
server_role = "traffic-manager"	
offset = "<%= @ports_offset %>"

[user_store]
type = "database_unique_id"

[super_admin]	
username = "<%= @admin_username %>"	
password = "<%= @admin_password %>"	
create_admin_account = true

[database.shared_db]	
type = "<%= @wso2shared_db_type %>"	
url = "<%= @wso2shared_db_url %>"	
username = "<%= @wso2shared_db_username %>"	
password = "<%= @wso2shared_db_password %>"
	
[database.shared_db.pool_options]	
validationQuery = "<%= @wso2shared_db_validation_query %>"	

[database.apim_db]	
type = "<%= @wso2am_db_type %>"	
url = "<%= @wso2am_db_url %>"	
username = "<%= @wso2am_db_username %>"	
password = "<%= @wso2am_db_password %>"
	
[database.apim_db.pool_options]	
validationQuery = "<%= @wso2am_db_validation_query %>"

[keystore.tls]	
file_name =  "<%= @key_store_location %>"	
type =  "JKS"	
password =  "<%= @key_store_password %>"	
alias =  "<%= @key_store_key_alias %>"	
key_password =  "<%= @key_store_key_password %>"	

[truststore]	
file_name = "<%= @trust_store_location %>"	
type = "JKS"	
password = "<%= @trust_store_password %>"

# key manager implementation
[apim.key_manager]	
service_url = "<%= @key_manager_server_url %>"

[apim.oauth_config]
revoke_endpoint = "<%= @oauth_configs_revoke_api_url %>"
enable_token_encryption = false
enable_token_hashing = false

		
<% @gateway_environments.each do |environment| %>	
[[apim.gateway.environment]]	
name = "<%= environment['name'] %>"	
type = "<%= environment['type'] %>"	
display_in_api_console = true	
description = "<%= environment['description'] %>"	
show_as_token_endpoint_url = true	
service_url = "<%= environment['server_url'] %>"	
username= "${admin.username}"	
password= "${admin.password}"	
ws_endpoint = "<%= environment['ws_endpoint'] %>"	
wss_endpoint = "<%= environment['wss_endpoint'] %>"	
http_endpoint = "<%= environment['http_endpoint'] %>"	
https_endpoint = "<%= environment['https_endpoint'] %>"	
websub_event_receiver_http_endpoint = "<%= environment['websub_event_receiver_http_endpoint'] %>"	
websub_event_receiver_https_endpoint = "<%= environment['websub_event_receiver_https_endpoint'] %>"	
<% end %>
